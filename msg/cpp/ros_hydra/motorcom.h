/* auto-generated by genmsg_cpp from /home/floris/ros/stacks/ros_hydra/msg/motorcom.msg.  Do not edit! */
#ifndef ROS_HYDRA_MOTORCOM_H
#define ROS_HYDRA_MOTORCOM_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/debug.h"
#include "ros/assert.h"
#include "ros/time.h"

namespace ros_hydra
{

//! \htmlinclude motorcom.msg.html

class motorcom : public ros::Message
{
public:
  typedef boost::shared_ptr<motorcom> Ptr;
  typedef boost::shared_ptr<motorcom const> ConstPtr;

  typedef float _pos_type;
  typedef float _latency_type;

  float pos;
  float latency;

  motorcom() : ros::Message(),
    pos(0),
    latency(0)
  {
  }
  motorcom(const motorcom &copy) : ros::Message(),
    pos(copy.pos),
    latency(copy.latency)
  {
    (void)copy;
  }
  motorcom &operator =(const motorcom &copy)
  {
    if (this == &copy)
      return *this;
    pos = copy.pos;
    latency = copy.latency;
    return *this;
  }
  virtual ~motorcom() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("ros_hydra/motorcom"); }
  inline static std::string __s_getMD5Sum() { return std::string("984e5caa89478a684daab6b724a0cb41"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "float32 pos\n"
    "float32 latency\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 4; // pos
    __l += 4; // latency
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, pos);
    SROS_SERIALIZE_PRIMITIVE(write_ptr, latency);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, pos);
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, latency);
    return read_ptr;
  }
};

typedef boost::shared_ptr<motorcom> motorcomPtr;
typedef boost::shared_ptr<motorcom const> motorcomConstPtr;


}

#endif
